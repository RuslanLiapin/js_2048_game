{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","messageStart","messageLose","messageWin","scoreBoard","tableCells","querySelectorAll","tableSize","score","scoreBuffer","keyCode","left","up","right","down","gameTable","isTableFull","flat","includes","generateRandomTile","row","Math","floor","random","col","mergeTiles","data","arr","currentElement","shift","i","nextElement","push","slice","moveTiles","direction","gameDataNext","j","shifted","filter","val","length","reverse","isGameOver","updateScore","reduce","acc","cur","textContent","performMove","init","classList","remove","add","cleanTable","draw","addEventListener","start","map","el","_","gameDataUnpacked","forEach","rows","cells","text","className","e"],"mappings":";AAAA,aA6PA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3PA,IAAMA,EAASC,SAASC,cAAc,UAChCC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAaJ,SAASC,cAAc,gBACpCI,EAAaL,SAASC,cAAc,eACpCK,EAAaN,SAASO,iBAAiB,MACvCC,EAAY,EACdC,EAAQ,EACRC,EAAc,GACZC,EAAU,CACdC,KAAM,GACNC,GAAI,GACJC,MAAO,GACPC,KAAM,IAEJC,EAAY,CACd,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAGZ,SAASC,IACA,OAACD,EAAUE,OAAOC,SAAS,GAGpC,SAASC,IACA,MAACH,KAAe,CACfI,IAAAA,EAAMC,KAAKC,MAAsB,EAAhBD,KAAKE,UACtBC,EAAMH,KAAKC,MAAsB,EAAhBD,KAAKE,UAExBR,GAAwB,IAAxBA,EAAUK,GAAKI,GAAY,CAC7BT,EAAUK,GAAKI,GAAQH,KAAKE,UAAY,GAAO,EAAI,EACnD,QAKN,SAASE,EAAWC,GACZC,IAAAA,EAAM,GACRC,EAAiBF,EAAKG,QAEtB,GAACD,EAAD,CAIC,IAAA,IAAIE,EAAI,EAAGA,EAAIvB,EAAWuB,IAAK,CAC5BC,IAAAA,EAAcL,EAAKG,QAErB,IAACE,EAAa,CACZH,GACFD,EAAIK,KAAKJ,GAEX,MACSA,IAAmBG,GAC5BJ,EAAIK,KAAKJ,EAAiBG,GAC1BtB,EAAYuB,KAAKJ,EAAiBG,GAClCH,EAAiB,MACRA,IAAmBG,IACxBH,GACFD,EAAIK,KAAKJ,GAEXA,EAAiBG,GAIdJ,OAAAA,EAAIM,SAGb,SAASC,EAAUC,GACXC,IAAAA,EAAe,CACnB,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAGJD,OAAAA,GACDzB,KAAAA,EAAQE,GACN,IAAA,IAAIyB,EAAI,EAAGA,EAAI9B,EAAW8B,IAAK,CAG7B,IAFCV,IAAAA,EAAM,GAEHG,EAAI,EAAGA,EAAIvB,EAAWuB,IAC7BH,EAAIK,KAAKjB,EAAUe,GAAGO,IAGlBC,IAAAA,EAAUb,EAAWE,EAAIY,OAAO,SAACC,GAAQA,OAAAA,EAAM,KAEjDF,GAAAA,EACG,IAAA,IAAIR,EAAI,EAAGA,EAAIQ,EAAQG,OAAQX,IAClCM,EAAaN,GAAGO,GAAKC,EAAQR,GAInC,MAEGpB,KAAAA,EAAQI,KACN,IAAA,IAAIuB,EAAI,EAAGA,EAAI9B,EAAW8B,IAAK,CAG7B,IAFCV,IAAAA,EAAM,GAEHG,EAAI,EAAGA,EAAIvB,EAAWuB,IAC7BH,EAAIK,KAAKjB,EAAUR,EAAY,EAAIuB,GAAGO,IAGlCC,IAAAA,EAAUb,EAAWE,EAAIY,OAAO,SAACC,GAAQA,OAAAA,EAAM,KAEjDF,GAAAA,EACG,IAAA,IAAIR,EAAI,EAAGA,EAAIQ,EAAQG,OAAQX,IAClCM,EAAa7B,EAAY,EAAIuB,GAAGO,GAAKC,EAAQR,GAInD,MAEGpB,KAAAA,EAAQC,KACN,IAAA,IAAImB,EAAI,EAAGA,EAAIvB,EAAWuB,IAAK,CAC5BQ,IAAAA,EAAUb,EAAWV,EAAUe,GAAGS,OAAO,SAACC,GAAQA,OAAAA,EAAM,KAE1DF,GAAAA,EACG,IAAA,IAAID,EAAI,EAAGA,EAAIC,EAAQG,OAAQJ,IAClCD,EAAaN,GAAGO,GAAKC,EAAQD,GAInC,MAEG3B,KAAAA,EAAQG,MACN,IAAA,IAAIiB,EAAI,EAAGA,EAAIvB,EAAWuB,IAAK,CAC5BQ,IAAAA,EAAUb,EAAWV,EAAUe,GAAGS,OAAO,SAACC,GAC9CA,OAAAA,EAAM,IAAGE,WAEPJ,GAAAA,EACG,IAAA,IAAID,EAAI,EAAGA,EAAIC,EAAQG,OAAQJ,IAClCD,EAAaN,GAAGvB,EAAY,EAAI8B,GAAKC,EAAQD,IAUhDD,OAAAA,EAGT,SAASO,IACH,IAAC3B,IACI,OAAA,EAGJ,IAAA,IAAIc,EAAI,EAAGA,EAAIvB,EAAWuB,IACxB,IAAA,IAAIO,EAAI,EAAGA,EAAI9B,EAAW8B,IAE1BA,GAAAA,EAAI9B,EAAY,GAAKQ,EAAUe,GAAGO,KAAOtB,EAAUe,GAAGO,EAAI,IACvDP,EAAIvB,EAAY,GAAKQ,EAAUe,GAAGO,KAAOtB,EAAUe,EAAI,GAAGO,GAEvD,OAAA,EAKN,OAAA,EAGT,SAASO,IACHnC,EAAYgC,OAAS,IACvBjC,GAASC,EAAYoC,OAAO,SAACC,EAAKC,GAAQD,OAAAA,EAAMC,IAChD3C,EAAW4C,YAAexC,GAAQ,GAItC,SAASyC,EAAYd,GACnB1B,EAAc,GAER2B,IAAAA,EAAeF,EAAUC,GAE3B,MAAA,GAAGpB,OAAAA,KAAmBqB,GAAAA,OAAAA,KAI1BrB,EAAYqB,GAEL,GAGT,SAASc,IACPpD,EAAOqD,UAAUC,OAAO,SACxBtD,EAAOkD,YAAc,UACrBlD,EAAOqD,UAAUE,IAAI,WACrBpD,EAAakD,UAAUE,IAAI,UAC3BlD,EAAWgD,UAAUE,IAAI,UACzBnD,EAAYiD,UAAUE,IAAI,UAC1BjD,EAAW4C,YAAc,IACzBxC,EAAQ,EACR8C,IACAnC,IACAA,IACAoC,IACAxD,SAASyD,iBAAiB,UAAWC,GAGvC,SAASH,IACHjD,EAAAA,GAAYqD,IAAI,SAAAC,GAClBA,EAAGR,UAAUC,OAAsBO,eAAAA,OAAAA,EAAGX,cACtCW,EAAGX,YAAc,KAGnBjC,EAAU2C,IAAI,SAAAtC,GAAOA,OAAAA,EAAIsC,IAAI,SAACE,EAAG9B,GAC/BV,EAAIU,GAAK,MAIb,SAASyB,IACDM,IAAAA,EAAmB,GAEzB9C,EAAU+C,QAAQ,SAACC,GACjBA,EAAKD,QAAQ,SAACE,GACZH,EAAiB7B,KAAKgC,OAI1B3D,EAAWyD,QAAQ,SAACE,GACZC,IAAAA,EAAOJ,EAAiBhC,QAE9BmC,EAAMhB,YAAeiB,GAAO,KAC5BD,EAAME,UAAY,aAClBF,EAAMb,UAAUE,IAAmBW,eAAAA,OAAAA,EAAMhB,gBAI7C,SAASS,EAAMU,GACTA,EAAEzD,QAAU,IAAMyD,EAAEzD,QAAU,IAI9BuC,EAAYkB,EAAEzD,WACZD,EAAYS,SAAS,OACvBf,EAAWgD,UAAUC,OAAO,UAE9BR,IACAzB,IAEIwB,KACFzC,EAAYiD,UAAUC,OAAO,UAE/B3C,EAAc,GACd8C,KAIJzD,EAAO0D,iBAAiB,QAASN","file":"main.dc0f6591.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst scoreBoard = document.querySelector('.game-score');\nconst tableCells = document.querySelectorAll('td');\nconst tableSize = 4;\nlet score = 0;\nlet scoreBuffer = [];\nconst keyCode = {\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n};\nlet gameTable = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction isTableFull() {\n  return !gameTable.flat().includes(0);\n}\n\nfunction generateRandomTile() {\n  while (!isTableFull()) {\n    const row = Math.floor(Math.random() * 4);\n    const col = Math.floor(Math.random() * 4);\n\n    if (gameTable[row][col] === 0) {\n      gameTable[row][col] = (Math.random() >= 0.5) ? 4 : 2;\n      break;\n    }\n  }\n}\n\nfunction mergeTiles(data) {\n  const arr = [];\n  let currentElement = data.shift();\n\n  if (!currentElement) {\n    return;\n  }\n\n  for (let i = 0; i < tableSize; i++) {\n    const nextElement = data.shift();\n\n    if (!nextElement) {\n      if (currentElement) {\n        arr.push(currentElement);\n      }\n      break;\n    } else if (currentElement === nextElement) {\n      arr.push(currentElement + nextElement);\n      scoreBuffer.push(currentElement + nextElement);\n      currentElement = null;\n    } else if (currentElement !== nextElement) {\n      if (currentElement) {\n        arr.push(currentElement);\n      }\n      currentElement = nextElement;\n    }\n  }\n\n  return arr.slice();\n}\n\nfunction moveTiles(direction) {\n  const gameDataNext = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  switch (direction) {\n    case keyCode.up:\n      for (let j = 0; j < tableSize; j++) {\n        const arr = [];\n\n        for (let i = 0; i < tableSize; i++) {\n          arr.push(gameTable[i][j]);\n        }\n\n        const shifted = mergeTiles(arr.filter((val) => val > 0));\n\n        if (shifted) {\n          for (let i = 0; i < shifted.length; i++) {\n            gameDataNext[i][j] = shifted[i];\n          }\n        }\n      }\n      break;\n\n    case keyCode.down:\n      for (let j = 0; j < tableSize; j++) {\n        const arr = [];\n\n        for (let i = 0; i < tableSize; i++) {\n          arr.push(gameTable[tableSize - 1 - i][j]);\n        }\n\n        const shifted = mergeTiles(arr.filter((val) => val > 0));\n\n        if (shifted) {\n          for (let i = 0; i < shifted.length; i++) {\n            gameDataNext[tableSize - 1 - i][j] = shifted[i];\n          }\n        }\n      }\n      break;\n\n    case keyCode.left:\n      for (let i = 0; i < tableSize; i++) {\n        const shifted = mergeTiles(gameTable[i].filter((val) => val > 0));\n\n        if (shifted) {\n          for (let j = 0; j < shifted.length; j++) {\n            gameDataNext[i][j] = shifted[j];\n          }\n        }\n      }\n      break;\n\n    case keyCode.right:\n      for (let i = 0; i < tableSize; i++) {\n        const shifted = mergeTiles(gameTable[i].filter((val) =>\n          val > 0).reverse());\n\n        if (shifted) {\n          for (let j = 0; j < shifted.length; j++) {\n            gameDataNext[i][tableSize - 1 - j] = shifted[j];\n          }\n        }\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  return gameDataNext;\n}\n\nfunction isGameOver() {\n  if (!isTableFull()) {\n    return false;\n  }\n\n  for (let i = 0; i < tableSize; i++) {\n    for (let j = 0; j < tableSize; j++) {\n      if (\n        (j < tableSize - 1 && gameTable[i][j] === gameTable[i][j + 1])\n        || (i < tableSize - 1 && gameTable[i][j] === gameTable[i + 1][j])\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction updateScore() {\n  if (scoreBuffer.length > 0) {\n    score += scoreBuffer.reduce((acc, cur) => acc + cur);\n    scoreBoard.textContent = !score ? 0 : score;\n  }\n}\n\nfunction performMove(direction) {\n  scoreBuffer = [];\n\n  const gameDataNext = moveTiles(direction);\n\n  if (`${gameTable}` === `${gameDataNext}`) {\n    return false;\n  }\n\n  gameTable = gameDataNext;\n\n  return true;\n}\n\nfunction init() {\n  button.classList.remove('start');\n  button.textContent = 'Restart';\n  button.classList.add('restart');\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  scoreBoard.textContent = '0';\n  score = 0;\n  cleanTable();\n  generateRandomTile();\n  generateRandomTile();\n  draw();\n  document.addEventListener('keydown', start);\n}\n\nfunction cleanTable() {\n  [...tableCells].map(el => {\n    el.classList.remove(`field-cell--${el.textContent}`);\n    el.textContent = '';\n  });\n\n  gameTable.map(row => row.map((_, i) => {\n    row[i] = 0;\n  }));\n}\n\nfunction draw() {\n  const gameDataUnpacked = [];\n\n  gameTable.forEach((rows) => {\n    rows.forEach((cells) => {\n      gameDataUnpacked.push(cells);\n    });\n  });\n\n  tableCells.forEach((cells) => {\n    const text = gameDataUnpacked.shift();\n\n    cells.textContent = !text ? null : text;\n    cells.className = 'field-cell';\n    cells.classList.add(`field-cell--${cells.textContent}`);\n  });\n}\n\nfunction start(e) {\n  if (e.keyCode < 36 || e.keyCode > 41) {\n    return;\n  }\n\n  if (performMove(e.keyCode)) {\n    if (scoreBuffer.includes(2048)) {\n      messageWin.classList.remove('hidden');\n    }\n    updateScore();\n    generateRandomTile();\n\n    if (isGameOver()) {\n      messageLose.classList.remove('hidden');\n    }\n    scoreBuffer = [];\n    draw();\n  }\n}\n\nbutton.addEventListener('click', init);\n"]}